{"version":3,"file":"static/js/dashboard.e3b81f59.chunk.js","mappings":"sRAGaA,EAAQC,EAAAA,GAAAA,GAAS,+HAQjBC,EAAOD,EAAAA,GAAAA,KAAW,mkBA6BLE,EAAAA,EAAAA,IAAM,GAAK,YAKxBC,EAAOH,EAAAA,GAAAA,IAAU,gvB,GAkDTA,EAAAA,GAAAA,KAAW,kF,iBCdhC,EAxE4B,WAC1B,OAAwCI,EAAAA,EAAAA,WAA6B,WACnE,IAAMC,EAAeC,aAAaC,QAAQ,8BAE1C,OAAIF,EACKG,KAAKC,MAAMJ,GAEb,EACT,IAAE,eAPKK,EAAY,KAAEC,EAAe,KAQpC,GAA8BP,EAAAA,EAAAA,UAAS,IAAG,eAAnCQ,EAAO,KAAEC,EAAU,KAEQ,aAgBjC,OAhBiC,0BAAlC,WAAmCC,GAAuC,8EACjD,GAAvBA,EAAMC,iBAEDH,EAAQ,CAAD,eAC4D,OAAtEI,EAAAA,GAAAA,MAAY,mEAA0D,mDAK/CC,EAAAA,EAAAA,IAAO,gBAA4BL,IAAW,KAAD,EAA9DM,EAAQ,OACRC,EAAaD,EAASE,KAC5BT,EAAgB,GAAD,eAAKD,GAAY,CAAES,KAClCN,EAAW,IAAI,kDAEfG,EAAAA,GAAAA,MAAY,iDAA2C,2DAE1D,sBAMD,OAJAK,EAAAA,EAAAA,YAAU,WACRf,aAAagB,QAAQ,6BAA8Bd,KAAKe,UAAUb,GACpE,GAAG,CAACA,KAGF,4BACE,gBAAKc,IAAKC,EAAAA,EAAMC,IAAI,6BACpB,SAAC3B,EAAK,wDACN,UAACE,EAAI,CAAC0B,SA5BiC,SAER,GAAD,gCA0BM,WAClC,kBAAOC,YAAY,2BAA2BC,MAAOjB,EAASkB,SAAU,SAAChB,GAA0C,OAAKD,EAAWC,EAAMiB,OAAOF,MAAM,KACtJ,mBAAQG,KAAK,SAAQ,wBAGvB,SAAC7B,EAAI,UACFO,GAAgBA,EAAauB,OAAS,GACrC,8BACGvB,EAAawB,KAAI,SAACf,EAAiBgB,GAClC,OACE,UAAC,KAAI,CAACC,UAAU,OAAOC,GAAG,QAAQC,GAAE,wBAAmBnB,EAAWoB,WAAY,WAC5E,gBAAKf,IAAKL,EAAWqB,MAAMC,WAAYf,IAAKP,EAAWqB,MAAME,SAE7D,4BACE,4BAASvB,EAAWoB,aACpB,uBAAIpB,EAAWwB,kBAGjB,SAAC,MAAc,CAACC,KAAM,OAR4DzB,EAAWoB,UAAYJ,EAW/G,OAGF,+BACE,oFAKN,SAAC,KAAc,MAGrB,C","sources":["pages/Dashboard/styles.ts","pages/Dashboard/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { shade } from \"polished\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 38px;\r\n  color: #3a3a3a;\r\n  max-width: 450px;\r\n  line-height: 56px;\r\n  margin-top: 40px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 40px;\r\n  max-width: 700px;\r\n  display: flex;\r\n\r\n  input {\r\n    flex: 1;\r\n    height: 70px;\r\n    padding: 0 24px;\r\n    border: 2px solid #fff;\r\n    border-radius: 5px 0px 0px 5px;\r\n    color: #3a3a3a;\r\n    border-right: 0;\r\n\r\n    &::placeholder {\r\n      color: #a8a8b3;\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 160px;\r\n    background-color: #04d361;\r\n    border-radius: 0px 5px 5px 0px;\r\n    border: 0;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    transition: background-color 0.2s;\r\n\r\n    &:hover {\r\n      background-color: ${shade(0.2, \"#04d361\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Repo = styled.div`\r\n  margin-top: 30px;\r\n  max-width: 700px;\r\n\r\n  .link {\r\n    background: #fff;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    padding: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: transform 0.2s;\r\n\r\n    &:hover {\r\n      transform: translateX(6px);\r\n    }\r\n\r\n    & + .link {\r\n      margin-top: 16px;\r\n    }\r\n\r\n    img {\r\n      width: 64px;\r\n      height: 64px;\r\n      border-radius: 50%;\r\n    }\r\n\r\n    div {\r\n      margin: 0 16px;\r\n      flex: 1;\r\n\r\n      strong {\r\n        font-size: 20px;\r\n        color: #3d3d4d;\r\n      }\r\n\r\n      p {\r\n        font-size: 18px;\r\n        color: #a8a8b3;\r\n        margin-top: 4px;\r\n      }\r\n    }\r\n\r\n    svg {\r\n      margin-left: auto;\r\n      color: #cbcbd6;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Error = styled.span`\r\n  display: block;\r\n  color: #c53030;\r\n  margin-top: 5px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GithubRepository } from \"../../interfaces/github-repository\";\r\nimport { api } from \"../../services/api\";\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport { Title, Form, Repo } from \"./styles\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [repositories, setRepositories] = useState<GithubRepository[]>(() => {\r\n    const storageRepos = localStorage.getItem(\"GitCollection:repositories\");\r\n\r\n    if (storageRepos) {\r\n      return JSON.parse(storageRepos);\r\n    }\r\n    return [];\r\n  });\r\n  const [newRepo, setNewRepo] = useState(\"\");\r\n\r\n  async function handleAddRepository(event: React.FormEvent<HTMLFormElement>): Promise<void> {\r\n    event.preventDefault();\r\n\r\n    if (!newRepo) {\r\n      toast.error(\"É necessário informar seu nome / nome do repositório!!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await api.get<GithubRepository>(`repos/${newRepo}`);\r\n      const repository = response.data;\r\n      setRepositories([...repositories, repository]);\r\n      setNewRepo(\"\");\r\n    } catch {\r\n      toast.error(\"Repositório não encontrado no Github!!!\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"GitCollection:repositories\", JSON.stringify(repositories));\r\n  }, [repositories]);\r\n\r\n  return (\r\n    <div>\r\n      <img src={logo} alt=\"Logo da aplicação\" />\r\n      <Title>Catálogo de repositórios do Github</Title>\r\n      <Form onSubmit={handleAddRepository}>\r\n        <input placeholder=\"username/repository_name\" value={newRepo} onChange={(event: React.ChangeEvent<HTMLInputElement>) => setNewRepo(event.target.value)} />\r\n        <button type=\"submit\">Buscar</button>\r\n      </Form>\r\n\r\n      <Repo>\r\n        {repositories && repositories.length > 0 ? (\r\n          <>\r\n            {repositories.map((repository: any, index: any) => {\r\n              return (\r\n                <Link className=\"link\" id=\"teste\" to={`/repositories/${repository.full_name}`} key={repository.full_name + index}>\r\n                  <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n\r\n                  <div>\r\n                    <strong>{repository.full_name}</strong>\r\n                    <p>{repository.description}</p>\r\n                  </div>\r\n\r\n                  <FiChevronRight size={20} />\r\n                </Link>\r\n              );\r\n            })}\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Não existem repositórios para serem listados</h1>\r\n          </>\r\n        )}\r\n      </Repo>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"names":["Title","styled","Form","shade","Repo","useState","storageRepos","localStorage","getItem","JSON","parse","repositories","setRepositories","newRepo","setNewRepo","event","preventDefault","toast","api","response","repository","data","useEffect","setItem","stringify","src","logo","alt","onSubmit","placeholder","value","onChange","target","type","length","map","index","className","id","to","full_name","owner","avatar_url","login","description","size"],"sourceRoot":""}